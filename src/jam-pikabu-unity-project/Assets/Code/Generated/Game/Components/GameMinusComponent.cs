//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMinus;

    public static Entitas.IMatcher<GameEntity> Minus {
        get {
            if (_matcherMinus == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Minus);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMinus = matcher;
            }

            return _matcherMinus;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Currency.Minus minus { get { return (Code.Gameplay.Features.Currency.Minus)GetComponent(GameComponentsLookup.Minus); } }
    public int Minus { get { return minus.Value; } }
    public bool hasMinus { get { return HasComponent(GameComponentsLookup.Minus); } }

    public GameEntity AddMinus(int newValue) {
        var index = GameComponentsLookup.Minus;
        var component = (Code.Gameplay.Features.Currency.Minus)CreateComponent(index, typeof(Code.Gameplay.Features.Currency.Minus));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceMinus(int newValue) {
        var index = GameComponentsLookup.Minus;
        var component = (Code.Gameplay.Features.Currency.Minus)CreateComponent(index, typeof(Code.Gameplay.Features.Currency.Minus));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveMinus() {
        RemoveComponent(GameComponentsLookup.Minus);
        return this;
    }
}

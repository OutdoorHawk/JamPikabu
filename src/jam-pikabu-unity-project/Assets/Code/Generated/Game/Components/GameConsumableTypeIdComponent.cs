//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherConsumableTypeId;

    public static Entitas.IMatcher<GameEntity> ConsumableTypeId {
        get {
            if (_matcherConsumableTypeId == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ConsumableTypeId);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherConsumableTypeId = matcher;
            }

            return _matcherConsumableTypeId;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Consumables.ConsumableTypeIdComponent consumableTypeId { get { return (Code.Gameplay.Features.Consumables.ConsumableTypeIdComponent)GetComponent(GameComponentsLookup.ConsumableTypeId); } }
    public Code.Meta.Features.Consumables.ConsumableTypeId ConsumableTypeId { get { return consumableTypeId.Value; } }
    public bool hasConsumableTypeId { get { return HasComponent(GameComponentsLookup.ConsumableTypeId); } }

    public GameEntity AddConsumableTypeId(Code.Meta.Features.Consumables.ConsumableTypeId newValue) {
        var index = GameComponentsLookup.ConsumableTypeId;
        var component = (Code.Gameplay.Features.Consumables.ConsumableTypeIdComponent)CreateComponent(index, typeof(Code.Gameplay.Features.Consumables.ConsumableTypeIdComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceConsumableTypeId(Code.Meta.Features.Consumables.ConsumableTypeId newValue) {
        var index = GameComponentsLookup.ConsumableTypeId;
        var component = (Code.Gameplay.Features.Consumables.ConsumableTypeIdComponent)CreateComponent(index, typeof(Code.Gameplay.Features.Consumables.ConsumableTypeIdComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveConsumableTypeId() {
        RemoveComponent(GameComponentsLookup.ConsumableTypeId);
        return this;
    }
}

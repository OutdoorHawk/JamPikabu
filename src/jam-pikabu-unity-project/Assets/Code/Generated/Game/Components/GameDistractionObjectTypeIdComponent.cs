//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDistractionObjectTypeId;

    public static Entitas.IMatcher<GameEntity> DistractionObjectTypeId {
        get {
            if (_matcherDistractionObjectTypeId == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DistractionObjectTypeId);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDistractionObjectTypeId = matcher;
            }

            return _matcherDistractionObjectTypeId;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Distraction.DistractionObjectTypeIdComponent distractionObjectTypeId { get { return (Code.Gameplay.Features.Distraction.DistractionObjectTypeIdComponent)GetComponent(GameComponentsLookup.DistractionObjectTypeId); } }
    public Code.Gameplay.Features.Distraction.DistractionObjectTypeId DistractionObjectTypeId { get { return distractionObjectTypeId.Value; } }
    public bool hasDistractionObjectTypeId { get { return HasComponent(GameComponentsLookup.DistractionObjectTypeId); } }

    public GameEntity AddDistractionObjectTypeId(Code.Gameplay.Features.Distraction.DistractionObjectTypeId newValue) {
        var index = GameComponentsLookup.DistractionObjectTypeId;
        var component = (Code.Gameplay.Features.Distraction.DistractionObjectTypeIdComponent)CreateComponent(index, typeof(Code.Gameplay.Features.Distraction.DistractionObjectTypeIdComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceDistractionObjectTypeId(Code.Gameplay.Features.Distraction.DistractionObjectTypeId newValue) {
        var index = GameComponentsLookup.DistractionObjectTypeId;
        var component = (Code.Gameplay.Features.Distraction.DistractionObjectTypeIdComponent)CreateComponent(index, typeof(Code.Gameplay.Features.Distraction.DistractionObjectTypeIdComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveDistractionObjectTypeId() {
        RemoveComponent(GameComponentsLookup.DistractionObjectTypeId);
        return this;
    }
}

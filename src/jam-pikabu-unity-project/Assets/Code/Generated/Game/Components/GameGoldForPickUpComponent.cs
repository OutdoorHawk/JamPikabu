//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGoldForPickUp;

    public static Entitas.IMatcher<GameEntity> GoldForPickUp {
        get {
            if (_matcherGoldForPickUp == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GoldForPickUp);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGoldForPickUp = matcher;
            }

            return _matcherGoldForPickUp;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Loot.GoldForPickUp goldForPickUp { get { return (Code.Gameplay.Features.Loot.GoldForPickUp)GetComponent(GameComponentsLookup.GoldForPickUp); } }
    public Code.Gameplay.Features.Currency.Config.CostSetup GoldForPickUp { get { return goldForPickUp.Value; } }
    public bool hasGoldForPickUp { get { return HasComponent(GameComponentsLookup.GoldForPickUp); } }

    public GameEntity AddGoldForPickUp(Code.Gameplay.Features.Currency.Config.CostSetup newValue) {
        var index = GameComponentsLookup.GoldForPickUp;
        var component = (Code.Gameplay.Features.Loot.GoldForPickUp)CreateComponent(index, typeof(Code.Gameplay.Features.Loot.GoldForPickUp));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceGoldForPickUp(Code.Gameplay.Features.Currency.Config.CostSetup newValue) {
        var index = GameComponentsLookup.GoldForPickUp;
        var component = (Code.Gameplay.Features.Loot.GoldForPickUp)CreateComponent(index, typeof(Code.Gameplay.Features.Loot.GoldForPickUp));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveGoldForPickUp() {
        RemoveComponent(GameComponentsLookup.GoldForPickUp);
        return this;
    }
}
